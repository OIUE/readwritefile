<extensionManifest><systemApiVersion>1.12.1</systemApiVersion><extensions><extension><name>org.oiue.nar.nifi.processors.writefile.WriteProcessor</name><type>PROCESSOR</type><deprecationNotice/><description>Writes the contents of a FlowFile to the local file system</description><tags><tag>put</tag><tag>local</tag><tag>copy</tag><tag>archive</tag><tag>files</tag><tag>filesystem</tag></tags><properties><property><name>Directory</name><displayName>Directory</displayName><description>The directory to which files should be written. You may use expression language such as /aa/bb/${path}</description><defaultValue></defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Conflict Resolution Strategy</name><displayName>Conflict Resolution Strategy</displayName><description>Indicates what should happen when a file with the same name already exists in the output directory</description><defaultValue>fail</defaultValue><allowableValues><allowableValue><displayName>replace</displayName><value>replace</value><description></description></allowableValue><allowableValue><displayName>ignore</displayName><value>ignore</value><description></description></allowableValue><allowableValue><displayName>fail</displayName><value>fail</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Create Missing Directories</name><displayName>Create Missing Directories</displayName><description>If true, then missing destination directories will be created. If false, flowfiles are penalized and sent to failure.</description><defaultValue>true</defaultValue><allowableValues><allowableValue><displayName>true</displayName><value>true</value><description></description></allowableValue><allowableValue><displayName>false</displayName><value>false</value><description></description></allowableValue></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Maximum File Count</name><displayName>Maximum File Count</displayName><description>Specifies the maximum number of files that can exist in the output directory</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Last Modified Time</name><displayName>Last Modified Time</displayName><description>Sets the lastModifiedTime on the output file to the value of this attribute.  Format must be yyyy-MM-dd'T'HH:mm:ssZ.  You may also use expression language such as ${file.lastModifiedTime}.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Last Modified Time TimeOut(millisecond) </name><displayName>Last Modified Time TimeOut(millisecond) </displayName><description>Task last modified time timeout.</description><defaultValue>600000</defaultValue><allowableValues></allowableValues><required>true</required><sensitive>false</sensitive><expressionLanguageSupported>false</expressionLanguageSupported><expressionLanguageScope>NONE</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Permissions</name><displayName>Permissions</displayName><description>Sets the permissions on the output file to the value of this attribute.  Format must be either UNIX rwxrwxrwx with a - in place of denied permissions (e.g. rw-r--r--) or an octal number (e.g. 644).  You may also use expression language such as ${file.permissions}.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Owner</name><displayName>Owner</displayName><description>Sets the owner on the output file to the value of this attribute.  You may also use expression language such as ${file.owner}. Note on many operating systems Nifi must be running as a super-user to have the permissions to set the file owner.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property><property><name>Group</name><displayName>Group</displayName><description>Sets the group on the output file to the value of this attribute.  You may also use expression language such as ${file.group}.</description><defaultValue></defaultValue><allowableValues></allowableValues><required>false</required><sensitive>false</sensitive><expressionLanguageSupported>true</expressionLanguageSupported><expressionLanguageScope>FLOWFILE_ATTRIBUTES</expressionLanguageScope><dynamicallyModifiesClasspath>false</dynamicallyModifiesClasspath><dynamic>false</dynamic></property></properties><dynamicProperties></dynamicProperties><relationships><relationship><name>success</name><description>Files that have been successfully written to the output directory are transferred to this relationship</description><autoTerminated>false</autoTerminated></relationship><relationship><name>failure</name><description>Files that could not be written to the output directory for some reason are transferred to this relationship</description><autoTerminated>false</autoTerminated></relationship><relationship><name>fragment success</name><description>Files fragment that have been successfully written to the output directory are transferred to this relationship</description><autoTerminated>false</autoTerminated></relationship></relationships><dynamicRelationship></dynamicRelationship><readsAttributes><readsAttribute><name></name><description></description></readsAttribute><readsAttribute><name>filename</name><description>The filename to use when writing the FlowFile to disk.</description></readsAttribute></readsAttributes><writesAttributes><writesAttribute><name></name><description></description></writesAttribute></writesAttributes><stateful></stateful><restricted><restrictions><restriction><requiredPermission>write filesystem</requiredPermission><explanation>Provides operator the ability to write to any file that NiFi has access to.</explanation></restriction></restrictions></restricted><inputRequirement>INPUT_REQUIRED</inputRequirement><systemResourceConsiderations></systemResourceConsiderations><seeAlso/></extension></extensions></extensionManifest>